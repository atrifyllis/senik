version: "3"
services:

  db:
    image: debezium/postgres:14
    ports:
      - "65432:5432"
    environment:
      POSTGRES_USER: "senik"
      POSTGRES_PASSWORD: "senik"
      POSTGRES_DB: "senik"
    volumes:
      - senik-volume:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # required

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092" # internal
      - "9093:9093" # external
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # probably default
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # default is 3

#  sonarqube:
#    image: sonarqube:community
#    depends_on:
#      - sonarqube-db
#    environment:
#      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
#      SONAR_JDBC_USERNAME: sonar
#      SONAR_JDBC_PASSWORD: sonar
#      # bypass error: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]
#      sonar.search.javaAdditionalOpts: "-Dnode.store.allow_mmap=false"
#    volumes:
#      - sonarqube_data:/opt/sonarqube/data
#      - sonarqube_extensions:/opt/sonarqube/extensions
#      - sonarqube_logs:/opt/sonarqube/logs
#    ports:
#      - "9000:9000"
#  sonarqube-db:
#    image: postgres:12
#    environment:
#      POSTGRES_USER: sonar
#      POSTGRES_PASSWORD: sonar
#    volumes:
#      - postgresql:/var/lib/postgresql
#      - postgresql_data:/var/lib/postgresql/data
#
#  app:
#    image: senik:0.0.1-SNAPSHOT
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/senik

volumes:
  senik-volume:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
